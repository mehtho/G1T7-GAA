```{r}
pacman::p_load(tmap, SpatialAcc, sf, 
               ggstatsplot, reshape2,
               tidyverse, dplyr, hash)
```

```{r}
name2file <- new.env(hash=T, parent=emptyenv())

name2file[["markets and food centres"]] <- "markets_and_food_centres.rds"
name2file[["mrt"]] <- "mrt.rds"

name2file[["atm"]] <- "poi_atm.rds"
name2file[["bank"]] <- "poi_bank.rds"
name2file[["beauty salon"]] <- "poi_beauty_salon.rds"
name2file[["cafe"]] <- "poi_cafe.rds"
name2file[["clothing store"]] <- "poi_clothing_store.rds"
name2file[["convenience"]] <- "poi_convenience_store.rds"
name2file[["dentist"]] <- "poi_dentist.rds"
name2file[["doctor"]] <- "poi_doctor.rds"
name2file[["gym"]] <- "poi_gym.rds"
name2file[["hospital"]] <- "poi_hospital.rds"
name2file[["library"]] <- "poi_library.rds"
name2file[["lodging"]] <- "poi_lodging.rds"
name2file[["night club"]] <- "poi_night_club.rds"
name2file[["pow"]] <- "poi_place_of_worship.rds"
name2file[["restaurant"]] <- "poi_restaurant.rds"
name2file[["school"]] <- "poi_school.rds"
name2file[["tourist"]] <- "poi_tourist_attraction.rds"

name2file[["supermarkets"]] <- "supermarkets.rds"
name2file[["bus"]] <- "osm_sg.rds"
```

```{r}
plot_acc <- function(method, quantiles, grid_size, point_type, exponent) {
  # Fix the naive demand
  grid <- read_rds(paste('../data/rds/grid_', grid_size, '_hexagon.rds', sep=""))
  print(grid)
  
  # points <- read_rds(paste('../data/rds/', name2file[[point_type]], sep="")) %>% 
  #   mutate(TOTAL_STALLS = as.numeric(TOTAL_STALLS)) %>%
  #   mutate(capacity = (TOTAL_STALLS * 25))
  points <- read_rds(paste('../data/rds/', name2file[[point_type]], sep="")) %>%
    mutate(capacity = 500)
  
  centroid.coords <- st_coordinates(st_centroid(grid))
  points.coords <- st_coordinates(points)
  
  dm <- exp(distance(centroid.coords, points.coords, type = "euclidean") / 1000 * exponent)

  acc_Hansen <- data.frame(ac(grid$demand,
                            points$capacity,
                            dm, 
                            d0 = 250,
                            power = 2, 
                            family = method))
  
  colnames(acc_Hansen) <- "acc"
  hexagon_Hansen <- bind_cols(grid, as_tibble(acc_Hansen))
  hexagon_Hansen$acc[is.infinite(hexagon_Hansen$acc)] <- NA
  
  mapex <- st_bbox(grid)

  tm_shape(grid) + 
  tm_polygons() +
  tm_shape(hexagon_Hansen,
           bbox = mapex) + 
    tm_fill(col = "acc",
            n = quantiles,
            style = "quantile",
            border.col = "black",
            border.lwd = 1,
            na.rm = TRUE) +
  tm_shape(points) +
    tm_symbols(size = 0.1) +
    tm_layout(main.title = paste("Accessibility to ", point_type, ": ", method," method", sep=""),
              main.title.position = "center",
              main.title.size = 2,
              legend.outside = FALSE,
              legend.height = 0.45, 
              legend.width = 3.0,
              legend.format = list(digits = 6),
              legend.position = c("right", "top"),
              frame = TRUE) +
    tm_compass(type="8star", size = 2) +
    tm_scale_bar(width = 0.15) +
    tm_grid(lwd = 0.1, alpha = 0.5)
}
```

1: "SAM", "KD2SFCA", "Hansen" : enum 2: Quantiles : int

```{r}
plot_acc("SAM", 10, 1000, "markets and food centres", 2)
# plot_acc("SAM", 10, 500)
# plot_acc("SAM", 10, 750)
# plot_acc("SAM", 10, 1000)
# plot_acc("KD2SFCA")
# plot_acc("Hansen")
```

```{r}
plot_acc("SAM", 10, 250, "markets and food centres", 2)
plot_acc("SAM", 10, 250, "mrt", 2)
# plot_acc("SAM", 10, 250, "atm")
# plot_acc("SAM", 10, 250, "bank")
# plot_acc("SAM", 10, 250, "beauty salon")
# plot_acc("SAM", 10, 250, "cafe")
# plot_acc("SAM", 10, 250, "clothing store")
# plot_acc("SAM", 10, 250, "convenience")
# plot_acc("SAM", 10, 250, "dentist")
# plot_acc("SAM", 10, 250, "doctor")
# plot_acc("SAM", 10, 250, "gym")
# plot_acc("SAM", 10, 250, "hospital")
# plot_acc("SAM", 10, 250, "library")
# plot_acc("SAM", 10, 250, "lodging")
# plot_acc("SAM", 10, 250, "night club")
# plot_acc("SAM", 10, 250, "pow")
# plot_acc("SAM", 10, 250, "restaurant")
# plot_acc("SAM", 10, 250, "school")
# plot_acc("SAM", 10, 250, "tourist")
# plot_acc("SAM", 10, 250, "supermarkets")
# plot_acc("SAM", 10, 250, "bus")
```
