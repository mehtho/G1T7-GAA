---
title: "Accessibility Prototype"
author:
  - name: Matthew Ho
    url: https://www.linkedin.com/in/matthewhoyiwen/
format:
  html:
    toc: true
execute: 
  eval: true
  echo: true
  warning: false
---

# Data Wrangling for Point Geometry 

```{r}
pacman::p_load(tidyverse, tmap, sf, dplyr, nngeo, maptools)
```

## Supermarket

```{r}
supermarkets <- st_read("../data/geospatial/SupermarketsKML.kml") %>% 
  mutate(Match=str_match_all(Description,"<td>(.*?)</td>")) %>% 
  mutate(Match=map(Match, ~ .[,2])) %>% 
  mutate(Match=map(Match,setNames,c("LIC_NAME", "BLK_HOUSE", "STR_NAME", "UNIT_NO", "POSTCODE", "LIC_NO", "INC_CRC", "FMEL_UPD_D"))) %>% 
  unnest_wider(Match) %>%
  st_as_sf() %>% 
  dplyr::select('LIC_NAME', 'geometry') %>% 
  st_make_valid() %>%
  st_zm() %>%
  st_transform(crs = 3414)
```

```{r}
any(is.na(supermarkets))

capc <- 500
```

```{r}
supermarkets$SUBTYPE <- ifelse(grepl("FAIRPRICE", supermarkets$LIC_NAME, ignore.case = TRUE), "FAIRPRICE",
                     ifelse(grepl("COLD STORAGE", supermarkets$LIC_NAME, ignore.case = TRUE), "COLD STORAGE",
                            ifelse(grepl("SHENG SIONG", supermarkets$LIC_NAME, ignore.case = TRUE), "SHENG SIONG", "OTHER")))

supermarkets$capacity <- capc
```

```{r}
for(st in c("FAIRPRICE", "COLD STORAGE", "SHENG SIONG", "OTHER")) {
  subset_df <- supermarkets[supermarkets$SUBTYPE == st, ]
  subset_df$capacity <- capc
  write_rds(subset_df, paste('../data/rds/supermarkets_', st, '.rds', sep=""))
}
```

```{r}
write_rds(supermarkets, '../data/rds/supermarkets.rds')
```

## Market & Food Centre

```{r}
marketandfc <- st_read("../data/geospatial/NEAMarketandFoodCentreKML.kml") %>% 
  mutate(Match=str_match_all(Description,"<td>(.*?)</td>")) %>% 
  mutate(Match=map(Match, ~ .[,2])) %>% 
  mutate(Match=map(Match,setNames,c("TOTAL_STALLS", "MP_STALLS", "CF_STALLS", "POSTAL_CODE", "OWNER", "TYPE", "LOCATION_CENTRE", "NAME_OF_CENTRE", "INC_CRC", "FMEL_UP_D"))) %>% 
  unnest_wider(Match) %>%
  st_as_sf() %>% dplyr::select("NAME_OF_CENTRE", "TYPE", "TOTAL_STALLS", "geometry") %>% 
  st_make_valid() %>%
  st_zm() %>%
  st_transform(crs = 3414)
```

```{r}
marketandfc$SUBTYPE <- ifelse(marketandfc$TYPE == "HC", "HAWKER_CENTRE",
                  ifelse(marketandfc$TYPE == "MHC", "MARKET_AND_HAWKER",
                         ifelse(marketandfc$TYPE == "MK", "MARKET", NA)))
marketandfc <- subset(marketandfc, select = -TYPE)

marketandfc$capacity <- as.integer(marketandfc$TOTAL_STALLS)
```

```{r}
for(st in c("HAWKER_CENTRE", "MARKET_AND_HAWKER", "MARKET")) {
  subset_df <- marketandfc[marketandfc$SUBTYPE == st, ]
  write_rds(subset_df, paste('../data/rds/markets_and_food_centres_', st, '.rds', sep=""))
}
```

```{r}
write_rds(marketandfc, '../data/rds/markets_and_food_centres.rds')
```

## MRT

```{r}
mrt <- read.csv('../data/aspatial/mrt.csv') %>%
  st_as_sf(coords = c("lng", "lat"),
                      crs = 4326) %>%
  st_transform(crs = 3414) %>%
  dplyr::select('name', 'geometry')

mrt$capacity <- capc

write_rds(mrt, '../data/rds/mrt.rds')
```

## POI

```{r}
poi <- read.csv('../data/aspatial/poi.csv') %>%
  st_as_sf(coords = c("lng", "lat"),
                      crs = 4326) %>%
  st_transform(crs = 3414)
```

```{r}
poi2type <- function(pois, typ) {
  poi <- pois[pois[[typ]] == 'True', ] %>%
    dplyr::select('name', 'geometry')
  
  poi$capacity <- capc
  write_rds(poi, paste('../data/rds/poi_', typ, '.rds', sep=""))
}
```

```{r}
poi_types <- c("restaurant", "hospital", "lodging", "bank", "cafe", "convenience_store", "clothing_store", "atm", "school", "beauty_salon", "place_of_worship", "tourist_attraction", "doctor", "dentist", "gym", "night_club", "police", "library")

for (poi_t in poi_types) {
  poi2type(poi, poi_t)
}
```

## Bus Stop

```{r}
bus_stop <- read_rds("../data/rds/osm_sg.rds")
```

```{r}
bus_stop <- st_transform(bus_stop, crs=3414)
bus_stop$capacity <- capc
```

```{r}
mpsz <- st_read("../data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml")
```

```{r}
mpsz <- mpsz %>%
  mutate(Match=str_match_all(Description,"<td>(.*?)</td>")) %>%
  mutate(Match=map(Match, ~ .[,2])) %>%
  mutate(Match=map(Match,setNames,c("SUBZONE_NO","SUBZONE_N","SUBZONE_C","CA_IND", "PLN_AREA_N", "PLN_AREA_C", "REGION_N", "REGION_C", "INC_CRC", "FMEL_UPD_D"))) %>%
  unnest_wider(Match) %>%
  st_as_sf()

mpsz <- mpsz %>%
  dplyr::select('Name', 'geometry', 'SUBZONE_NO', 'SUBZONE_N', 'SUBZONE_C', 'PLN_AREA_N', 'PLN_AREA_C', 'REGION_N', 'REGION_C')

mpsz <- st_make_valid(mpsz)
mpsz <- st_zm(mpsz)
```

```{r}
mpsz <- st_transform(mpsz, crs=3414)
```

```{r}
merged_sg <- st_union(mpsz) %>%
    st_cast("POLYGON")

merged_sg <- merged_sg[c(10)]
merged_sg <- st_remove_holes(merged_sg)
merged_sg <- st_as_sf(merged_sg)

plot(st_geometry(merged_sg))
```

```{r}
merged <- as_Spatial(merged_sg)
merged_sp <- as(merged, "SpatialPolygons")
merged_owin <- as(merged_sp, "owin")
write_rds(merged_owin, "../data/rds/merged_owin.rds")
```

```{r}
merged_owin <- read_rds("../data/rds/merged_owin.rds")
```

```{r}
bus_stop_sg <- st_intersection(bus_stop, merged_sg)
```

```{r}
bus_stop_sg <- bus_stop_sg %>%
  dplyr::select("osm_id", "fclass", "name")

bus_stop_sg$capacity <- capc
```

```{r}
write_rds(bus_stop_sg, "../data/rds/bus_stop_sg.rds")
bus_stop_sg <- read_rds("../data/rds/bus_stop_sg.rds")
```
